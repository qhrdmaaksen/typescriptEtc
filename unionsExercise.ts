// **********************************************
// ******************* PART 1 *******************
// **********************************************
// 숫자 또는 부울일 수 있는 highScore 라는 변수를 만듭니다.

let hightScore: number | boolean;
hightScore = 1;
hightScore = false;

// **********************************************
// ******************* PART 2 *******************
// **********************************************
// stuff 라는 배열을 만듭니다.
// 숫자 배열 또는 문자열 배열일 수 있습니다.
// 숫자와 문자열 배열(함께 혼합)일 수 없습니다.
//(number | string)[] 과 같이 작성하면 숫자와 문자열 배열 혼합될수있다
const stuff: number[] | string[] = []

// **********************************************
// ******************* PART 3 *******************
// **********************************************
// SkillLevel 이라는 리터럴 유형을 생성합니다.
// "Beginner", "Intermediate", "Advanced" 및 "Expert"의 4가지 값이 허용됩니다.

type SkillLevel = '초급' | '중급' | '고급' | '전문가'

// **********************************************
// ******************* PART 4 *******************
// **********************************************
// SkiSchoolStudent 라는 유형을 만듭니다.
// 이름은 문자열이어야 합니다.
// 나이는 숫자여야 합니다.
// 스포츠는 "스키" 또는 "스노우보드"여야 합니다.
// level 은 SkillLevel 유형의 값이어야 합니다(위부터).

type SkiSchoolStudent = {
	name: string,
	age: number,
	sports: '스키' | '스노우보드'
	level: SkillLevel
}

// **********************************************
// ******************* PART 5 *******************
// **********************************************
// RGB 색상을 나타내는 유형 정의
// r은 숫자여야 합니다 g는 숫자여야 합니다 b는 숫자여야 합니다

// HSL 색상을 나타내는 유형을 정의합니다.
// h는 숫자여야 합니다. s는 숫자여야 합니다. l은 숫자여야 합니다.
// RGB 및 HSL 색상 유형의 혼합을 보유할 수 있는 색상이라는 배열을 만듭니다.

type RGB = {
	r: number,
	g: number,
	b: number,
}

type HSL = {
	h: number,
	s: number,
	l: number,
}

const colors: (RGB | HSL)[] = []

// **********************************************
// ******************* PART 6 *******************
// **********************************************
// 단일 문자열 또는 문자열 배열을 받아들이는 greet 라는 함수를 작성하십시오.
// 해당 한 사람에 대해 "Hello, <name>"을 인쇄하거나 배열의 각 사람에게 동일한 형식으로 인사해야 합니다.

const greet = (person: string | string[]): void => {
	if (typeof person === 'string') {
		console.log(`'Hello,  ${person}`)
	} else {
		for (let p of person) {
			console.log(`'Hello,  ${p}`)
		}
	}
}
